{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruben.mavarez\\\\Desktop\\\\sunflower-mast\\\\Sunflower\\\\src\\\\context\\\\ProductContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport data from '../data.json';\nexport const ProductContext = createContext();\n\nconst getPromise = d => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(d);\n    }, 3000);\n  });\n};\n\nconst ProductProvider = ({\n  children\n}) => {\n  const [dataJson, setDataJson] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searching, setSearch] = useState([]);\n\n  const search = e => {\n    e.preventDefault();\n    const product = dataJson.filter(item => item.name.toLowerCase().includes(e.target.value) && item);\n    setSearch(product);\n  };\n\n  useEffect(() => {\n    console.log('component did mount');\n    getPromise(data).then(result => {\n      setLoading(false);\n      const results = result.filter(item => item.name.toLowerCase().includes(searching) ? item : result);\n      setDataJson(results);\n    });\n  }, [dataJson, searching]);\n  return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n    value: {\n      dataJson,\n      loading,\n      setDataJson,\n      setLoading,\n      search\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default ProductProvider;","map":{"version":3,"sources":["C:/Users/ruben.mavarez/Desktop/sunflower-mast/Sunflower/src/context/ProductContext.js"],"names":["React","createContext","useState","useEffect","data","ProductContext","getPromise","d","Promise","resolve","reject","setTimeout","ProductProvider","children","dataJson","setDataJson","loading","setLoading","searching","setSearch","search","e","preventDefault","product","filter","item","name","toLowerCase","includes","target","value","console","log","then","result","results"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,EAApC;;AAEP,MAAMK,UAAU,GAAIC,CAAD,IAAO;AACtB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,UAAU,CAAC,MAAM;AACbF,MAAAA,OAAO,CAACF,CAAD,CAAP;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJM,CAAP;AAKH,CAND;;AAQA,MAAMK,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAYC,SAAZ,IAAyBjB,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMkB,MAAM,GAAGC,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAGT,QAAQ,CAACU,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCP,CAAC,CAACQ,MAAF,CAASC,KAA1C,KAAoDL,IAA5E,CAAhB;AACAN,IAAAA,SAAS,CAACI,OAAD,CAAT;AACH,GAJD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA1B,IAAAA,UAAU,CAACF,IAAD,CAAV,CAAiB6B,IAAjB,CAAsBC,MAAM,IAAI;AAC5BjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,YAAMkB,OAAO,GAAGD,MAAM,CAACV,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCV,SAAjC,IAA8CO,IAA9C,GAAqDS,MAA3E,CAAhB;AACAnB,MAAAA,WAAW,CAACoB,OAAD,CAAX;AACH,KAJD;AAKH,GAPQ,EAOP,CAACrB,QAAD,EAAWI,SAAX,CAPO,CAAT;AASA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,QADG;AAEHE,MAAAA,OAFG;AAGHD,MAAAA,WAHG;AAIHE,MAAAA,UAJG;AAKHG,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKP,QATL,CADJ;AAaH,CAlCD;;AAoCA,eAAeD,eAAf","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport data from '../data.json';\r\n\r\nexport const ProductContext = createContext();\r\n\r\nconst getPromise = (d) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(d)\r\n        }, 3000);\r\n    })\r\n}\r\n\r\nconst ProductProvider = ({children}) => {\r\n    const [dataJson, setDataJson] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [searching, setSearch] = useState([])\r\n\r\n    const search = e => {\r\n        e.preventDefault();\r\n        const product = dataJson.filter(item => item.name.toLowerCase().includes(e.target.value) && item)\r\n        setSearch(product)\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log('component did mount')\r\n        getPromise(data).then(result => {\r\n            setLoading(false)\r\n            const results = result.filter(item => item.name.toLowerCase().includes(searching) ? item : result);\r\n            setDataJson(results)\r\n        });\r\n    },[dataJson, searching])\r\n\r\n    return ( \r\n        <ProductContext.Provider\r\n            value={{\r\n                dataJson,\r\n                loading,\r\n                setDataJson,\r\n                setLoading,\r\n                search\r\n            }}\r\n        >\r\n            {children}\r\n        </ProductContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ProductProvider;"]},"metadata":{},"sourceType":"module"}