{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruben.mavarez\\\\Desktop\\\\sunflower-mast\\\\Sunflower\\\\src\\\\context\\\\CartContext.js\";\nimport React, { createContext, useState } from 'react';\nimport dataJson from '../data.json';\nexport const CartContext = createContext();\n\nconst CartProvider = ({\n  children\n}) => {\n  const [cart, addToCart] = useState([]);\n\n  const sumItems = cartItems => {\n    let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\n    let totalItems = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\n    return {\n      itemCount,\n      totalItems\n    };\n  };\n\n  const selectProduct = prodID => {\n    const product = dataJson.filter(p => p.id === prodID)[0];\n    product.quantity = 1;\n    addToCart([...cart, ...sumItems(cart), product //tambien puede ser ...product y borrar el [0]\n    ]);\n  };\n\n  const deleteProduct = prodId => {\n    const product = cart.findIndex(p => p.id === prodId);\n    addToCart(product);\n  };\n\n  const cleanCart = () => addToCart([]);\n\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      cart,\n      qty: cart.length,\n      selectProduct,\n      deleteProduct,\n      cleanCart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["C:/Users/ruben.mavarez/Desktop/sunflower-mast/Sunflower/src/context/CartContext.js"],"names":["React","createContext","useState","dataJson","CartContext","CartProvider","children","cart","addToCart","sumItems","cartItems","itemCount","reduce","total","product","quantity","totalItems","price","toFixed","selectProduct","prodID","filter","p","id","deleteProduct","prodId","findIndex","cleanCart","qty","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA6C,OAA7C;AAEA,OAAOC,QAAP,MAAqB,cAArB;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;;AAEP,MAAMI,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACjC,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,QAAQ,GAAGC,SAAS,IAAI;AAC1B,QAAIC,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiB,CAACC,KAAD,EAAQC,OAAR,KAAoBD,KAAK,GAAGC,OAAO,CAACC,QAArD,EAA+D,CAA/D,CAAhB;AACA,QAAIC,UAAU,GAAGN,SAAS,CAACE,MAAV,CAAiB,CAACC,KAAD,EAAQC,OAAR,KAAoBD,KAAK,GAAGC,OAAO,CAACG,KAAR,GAAgBH,OAAO,CAACC,QAArE,EAA+E,CAA/E,EAAkFG,OAAlF,CAA0F,CAA1F,CAAjB;AACA,WAAO;AAAEP,MAAAA,SAAF;AAAaK,MAAAA;AAAb,KAAP;AACH,GAJD;;AAMA,QAAMG,aAAa,GAAIC,MAAD,IAAY;AAC9B,UAAMN,OAAO,GAAGX,QAAQ,CAACkB,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,MAA9B,EAAsC,CAAtC,CAAhB;AACAN,IAAAA,OAAO,CAACC,QAAR,GAAmB,CAAnB;AACAP,IAAAA,SAAS,CAAC,CACN,GAAGD,IADG,EAEN,GAAGE,QAAQ,CAACF,IAAD,CAFL,EAGNO,OAHM,CAGE;AAHF,KAAD,CAAT;AAKH,GARD;;AASA,QAAMU,aAAa,GAAIC,MAAD,IAAY;AAC9B,UAAMX,OAAO,GAAGP,IAAI,CAACmB,SAAL,CAAeJ,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASE,MAA7B,CAAhB;AACAjB,IAAAA,SAAS,CAACM,OAAD,CAAT;AACH,GAHD;;AAKA,QAAMa,SAAS,GAAG,MAAMnB,SAAS,CAAC,EAAD,CAAjC;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,IADG;AAEHqB,MAAAA,GAAG,EAAErB,IAAI,CAACsB,MAFP;AAGHV,MAAAA,aAHG;AAIHK,MAAAA,aAJG;AAKHG,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKrB,QATL,CADJ;AAaH,CAtCD;;AAwCA,eAAeD,YAAf","sourcesContent":["import React, {createContext, useState} from 'react';\r\n\r\nimport dataJson from '../data.json';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst CartProvider = ({children}) => {\r\n    const [cart, addToCart] = useState([]);\r\n\r\n    const sumItems = cartItems => {\r\n        let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\r\n        let totalItems = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\r\n        return { itemCount, totalItems }\r\n    }\r\n\r\n    const selectProduct = (prodID) => {\r\n        const product = dataJson.filter(p => p.id === prodID)[0];\r\n        product.quantity = 1;\r\n        addToCart([\r\n            ...cart,\r\n            ...sumItems(cart),\r\n            product //tambien puede ser ...product y borrar el [0]\r\n        ]);\r\n    }\r\n    const deleteProduct = (prodId) => {\r\n        const product = cart.findIndex(p => p.id === prodId)\r\n        addToCart(product);\r\n    }\r\n\r\n    const cleanCart = () => addToCart([]);\r\n\r\n    return ( \r\n        <CartContext.Provider\r\n            value={{\r\n                cart,\r\n                qty: cart.length,\r\n                selectProduct,\r\n                deleteProduct,\r\n                cleanCart\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n     );\r\n}\r\n \r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}