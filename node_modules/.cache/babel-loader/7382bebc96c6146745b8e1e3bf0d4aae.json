{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Downloads\\\\Sunflower\\\\src\\\\context\\\\ProductContext.js\";\nimport React, { createContext, useState, useEffect } from 'react'; ////////////////////////////////////////////////////////////////\n\nimport data from '../data.json'; ///////////////////////////////////////////////////////////////\n\nimport { getFirestore } from '../firebase/index';\nexport const ProductContext = createContext();\n\nconst getPromise = d => {\n  return new Promise((resolve, reject) => {\n    resolve(d);\n  });\n}; ////////////////////////////////////////////////////////////////\n\n\nconst ProductProvider = ({\n  children\n}) => {\n  const [dataJson, setDataJson] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searching, setSearch] = useState('');\n\n  const search = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    const db = getFirestore();\n    const itemCollection = db.collection('items');\n    itemCollection.get().then(querySnapshot => {\n      setTimeout(() => {\n        setLoading(false);\n      }, 3000);\n      const product = querySnapshot.docs.filter(item => console.log());\n      setDataJson(product.length === 0 ? querySnapshot.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })) : product);\n    });\n    console.log(dataJson);\n    console.log('component did mount'); // getPromise(data).then(result => {\n    //     setTimeout(() => {\n    //         setLoading(false)\n    //     }, 3000)\n    //     \n    //     setDataJson(product.length === 0 ? result : product);\n    // });\n  }, [searching]);\n  return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n    value: {\n      dataJson,\n      loading,\n      searching,\n      setDataJson,\n      setLoading,\n      search\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default ProductProvider;","map":{"version":3,"sources":["C:/Users/acer/Downloads/Sunflower/src/context/ProductContext.js"],"names":["React","createContext","useState","useEffect","data","getFirestore","ProductContext","getPromise","d","Promise","resolve","reject","ProductProvider","children","dataJson","setDataJson","loading","setLoading","searching","setSearch","search","e","target","value","db","itemCollection","collection","get","then","querySnapshot","setTimeout","product","docs","filter","item","console","log","length","map","doc","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD,C,CACA;;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CACA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,OAAO,MAAMC,cAAc,GAAGL,aAAa,EAApC;;AAEP,MAAMM,UAAU,GAAIC,CAAD,IAAO;AACtB,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCD,IAAAA,OAAO,CAACF,CAAD,CAAP;AACH,GAFM,CAAP;AAGH,CAJD,C,CAMA;;;AACA,MAAMI,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAYC,SAAZ,IAAyBjB,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMkB,MAAM,GAAGC,CAAC,IAAI;AAChBF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMqB,EAAE,GAAGnB,YAAY,EAAvB;AACA,UAAMoB,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAvB;AACAD,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA2BC,aAAD,IAAmB;AACzCC,MAAAA,UAAU,CAAC,MAAM;AACbb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAFS,EAEP,IAFO,CAAV;AAGA,YAAMc,OAAO,GAAGF,aAAa,CAACG,IAAd,CAAmBC,MAAnB,CAA0BC,IAAI,IAAIC,OAAO,CAACC,GAAR,EAAlC,CAAhB;AACArB,MAAAA,WAAW,CAACgB,OAAO,CAACM,MAAR,KAAmB,CAAnB,GAAuBR,aAAa,CAACG,IAAd,CAAmBM,GAAnB,CAAuBC,GAAG,KAAK,EAAC,GAAGA,GAAG,CAACnC,IAAJ,EAAJ;AAAgBoC,QAAAA,EAAE,EAAED,GAAG,CAACC;AAAxB,OAAL,CAA1B,CAAvB,GAAsFT,OAAvF,CAAX;AAEH,KAPD;AAQAI,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAZY,CAaZ;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GApBQ,EAoBP,CAAClB,SAAD,CApBO,CAAT;AAsBA,sBACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,QADG;AAEHE,MAAAA,OAFG;AAGHE,MAAAA,SAHG;AAIHH,MAAAA,WAJG;AAKHE,MAAAA,UALG;AAMHG,MAAAA;AANG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKP,QAVL,CADJ;AAcH,CA7CD;;AA+CA,eAAeD,eAAf","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\n////////////////////////////////////////////////////////////////\r\nimport data from '../data.json';\r\n///////////////////////////////////////////////////////////////\r\nimport { getFirestore } from '../firebase/index'\r\n\r\nexport const ProductContext = createContext();\r\n\r\nconst getPromise = (d) => {\r\n    return new Promise((resolve, reject) => {\r\n        resolve(d)\r\n    })\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\nconst ProductProvider = ({children}) => {\r\n    const [dataJson, setDataJson] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [searching, setSearch] = useState('');\r\n\r\n    const search = e => {\r\n        setSearch(e.target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const db = getFirestore();\r\n        const itemCollection = db.collection('items');\r\n        itemCollection.get().then((querySnapshot) => {\r\n            setTimeout(() => {\r\n                setLoading(false)\r\n            }, 3000)\r\n            const product = querySnapshot.docs.filter(item => console.log());\r\n            setDataJson(product.length === 0 ? querySnapshot.docs.map(doc => ({...doc.data(), id: doc.id})) : product);\r\n            \r\n        })\r\n        console.log(dataJson)\r\n        console.log('component did mount')\r\n        // getPromise(data).then(result => {\r\n        //     setTimeout(() => {\r\n        //         setLoading(false)\r\n        //     }, 3000)\r\n        //     \r\n        //     setDataJson(product.length === 0 ? result : product);\r\n        // });\r\n    },[searching]);\r\n\r\n    return ( \r\n        <ProductContext.Provider\r\n            value={{\r\n                dataJson,\r\n                loading,\r\n                searching,\r\n                setDataJson,\r\n                setLoading,\r\n                search\r\n            }}\r\n        >\r\n            {children}\r\n        </ProductContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ProductProvider;"]},"metadata":{},"sourceType":"module"}