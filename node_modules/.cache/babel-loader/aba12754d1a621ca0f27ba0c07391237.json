{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruben.mavarez\\\\Desktop\\\\sunflower-mast\\\\Sunflower\\\\src\\\\context\\\\CartContext.js\";\nimport React, { createContext, useState } from 'react';\nimport dataJson from '../data.json';\nexport const CartContext = createContext();\n\nconst CartProvider = ({\n  children\n}) => {\n  const [cart, addToCart] = useState([]);\n\n  const sumItems = cartItems => {\n    let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\n    return itemCount;\n  };\n\n  const selectProduct = prodID => {\n    const product = dataJson.filter(p => p.id === prodID)[0];\n    product.quantity = 1;\n\n    if (!cart.find(item => item.id === product.id)) {\n      addToCart([...cart, product //tambien puede ser ...product y borrar el [0]\n      ]);\n    } else {\n      product.quantity += 1;\n    }\n  };\n\n  const addMore = () => {\n    setCount(count + 1);\n\n    if (count === 10) {\n      alert('No mas de 10');\n      setCount(10);\n    }\n  };\n\n  const lessMore = () => {\n    setCount(count - 1);\n\n    if (count === 1) {\n      alert('No menos de 1');\n      setCount(1);\n    }\n  };\n\n  const deleteProduct = prodId => {\n    const product = cart.findIndex(p => p.id === prodId);\n    addToCart(product);\n  };\n\n  const cleanCart = () => addToCart([]);\n\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      cart,\n      qty: cart.length,\n      selectProduct,\n      deleteProduct,\n      cleanCart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["C:/Users/ruben.mavarez/Desktop/sunflower-mast/Sunflower/src/context/CartContext.js"],"names":["React","createContext","useState","dataJson","CartContext","CartProvider","children","cart","addToCart","sumItems","cartItems","itemCount","reduce","total","product","quantity","selectProduct","prodID","filter","p","id","find","item","addMore","setCount","count","alert","lessMore","deleteProduct","prodId","findIndex","cleanCart","qty","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,QAA6C,OAA7C;AAEA,OAAOC,QAAP,MAAqB,cAArB;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;;AAEP,MAAMI,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACjC,QAAM,CAACC,IAAD,EAAOC,SAAP,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,QAAQ,GAAGC,SAAS,IAAI;AAC1B,QAAIC,SAAS,GAAGD,SAAS,CAACE,MAAV,CAAiB,CAACC,KAAD,EAAQC,OAAR,KAAoBD,KAAK,GAAGC,OAAO,CAACC,QAArD,EAA+D,CAA/D,CAAhB;AAEA,WAAQJ,SAAR;AACH,GAJD;;AAMA,QAAMK,aAAa,GAAIC,MAAD,IAAY;AAC9B,UAAMH,OAAO,GAAGX,QAAQ,CAACe,MAAT,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASH,MAA9B,EAAsC,CAAtC,CAAhB;AACAH,IAAAA,OAAO,CAACC,QAAR,GAAmB,CAAnB;;AACA,QAAG,CAACR,IAAI,CAACc,IAAL,CAAUC,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYN,OAAO,CAACM,EAAtC,CAAJ,EAA8C;AAC1CZ,MAAAA,SAAS,CAAC,CACN,GAAGD,IADG,EAENO,OAFM,CAEE;AAFF,OAAD,CAAT;AAIH,KALD,MAKO;AACHA,MAAAA,OAAO,CAACC,QAAR,IAAoB,CAApB;AACH;AAGJ,GAbD;;AAcA,QAAMQ,OAAO,GAAG,MAAK;AACjBC,IAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR;;AACA,QAAGA,KAAK,KAAK,EAAb,EAAgB;AACZC,MAAAA,KAAK,CAAC,cAAD,CAAL;AACAF,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAND;;AAOA,QAAMG,QAAQ,GAAG,MAAK;AAClBH,IAAAA,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR;;AACA,QAAGA,KAAK,KAAK,CAAb,EAAe;AACXC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACAF,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACH;AACJ,GAND;;AAQA,QAAMI,aAAa,GAAIC,MAAD,IAAY;AAC9B,UAAMf,OAAO,GAAGP,IAAI,CAACuB,SAAL,CAAeX,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASS,MAA7B,CAAhB;AACArB,IAAAA,SAAS,CAACM,OAAD,CAAT;AACH,GAHD;;AAKA,QAAMiB,SAAS,GAAG,MAAMvB,SAAS,CAAC,EAAD,CAAjC;;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,IADG;AAEHyB,MAAAA,GAAG,EAAEzB,IAAI,CAAC0B,MAFP;AAGHjB,MAAAA,aAHG;AAIHY,MAAAA,aAJG;AAKHG,MAAAA;AALG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKzB,QATL,CADJ;AAaH,CA1DD;;AA4DA,eAAeD,YAAf","sourcesContent":["import React, {createContext, useState} from 'react';\r\n\r\nimport dataJson from '../data.json';\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst CartProvider = ({children}) => {\r\n    const [cart, addToCart] = useState([]);\r\n\r\n    const sumItems = cartItems => {\r\n        let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\r\n\r\n        return  itemCount\r\n    }\r\n\r\n    const selectProduct = (prodID) => {\r\n        const product = dataJson.filter(p => p.id === prodID)[0];\r\n        product.quantity = 1;\r\n        if(!cart.find(item => item.id === product.id)){\r\n            addToCart([\r\n                ...cart,\r\n                product //tambien puede ser ...product y borrar el [0]\r\n            ]);\r\n        } else {\r\n            product.quantity += 1\r\n        }\r\n\r\n\r\n    }\r\n    const addMore = () =>{\r\n        setCount(count + 1)\r\n        if(count === 10){\r\n            alert('No mas de 10')\r\n            setCount(10)\r\n        }\r\n    }\r\n    const lessMore = () =>{\r\n        setCount(count - 1)\r\n        if(count === 1){\r\n            alert('No menos de 1')\r\n            setCount(1)\r\n        }\r\n    }\r\n    \r\n    const deleteProduct = (prodId) => {\r\n        const product = cart.findIndex(p => p.id === prodId)\r\n        addToCart(product);\r\n    }\r\n\r\n    const cleanCart = () => addToCart([]);\r\n\r\n    return ( \r\n        <CartContext.Provider\r\n            value={{\r\n                cart,\r\n                qty: cart.length,\r\n                selectProduct,\r\n                deleteProduct,\r\n                cleanCart\r\n            }}\r\n        >\r\n            {children}\r\n        </CartContext.Provider>\r\n     );\r\n}\r\n \r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}